# Generated by Django 5.2.7 on 2025-10-22 21:06

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("projects", "0005_alter_project_owner_database_endpoint_and_more"),
        ("responses", "0004_response_is_owner_question_and_more"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ResponseLink",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "token",
                    models.CharField(
                        db_index=True,
                        help_text="Unique token for the shareable URL",
                        max_length=100,
                        unique=True,
                    ),
                ),
                (
                    "question_set",
                    models.JSONField(
                        default=list,
                        help_text="List of question IDs to include in this link's form",
                    ),
                ),
                (
                    "respondent_type",
                    models.CharField(
                        blank=True,
                        help_text="Target respondent type (farmers, processors, etc.)",
                        max_length=50,
                    ),
                ),
                (
                    "commodity",
                    models.CharField(
                        blank=True,
                        help_text="Target commodity (comma-separated if multiple)",
                        max_length=200,
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, help_text="Target country", max_length=100
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Whether this link is currently active"
                    ),
                ),
                (
                    "max_responses",
                    models.PositiveIntegerField(
                        default=1,
                        help_text="Maximum number of responses allowed (0 = unlimited)",
                    ),
                ),
                (
                    "response_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of responses submitted via this link",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(help_text="When this link expires"),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True,
                        help_text="Optional title for the link (e.g., 'Farmer Survey 2024')",
                        max_length=200,
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Optional description shown to respondents",
                    ),
                ),
                (
                    "custom_metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Additional custom metadata (tags, notes, etc.)",
                    ),
                ),
                (
                    "auto_expire_after_use",
                    models.BooleanField(
                        default=True,
                        help_text="Automatically expire link after first successful submission",
                    ),
                ),
                (
                    "require_consent",
                    models.BooleanField(
                        default=True,
                        help_text="Require respondents to give consent before starting",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "first_accessed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this link was first accessed",
                        null=True,
                    ),
                ),
                (
                    "last_accessed_at",
                    models.DateTimeField(
                        blank=True,
                        help_text="When this link was last accessed",
                        null=True,
                    ),
                ),
                (
                    "access_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Total number of times this link was accessed",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        help_text="User who created this link",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_response_links",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "project",
                    models.ForeignKey(
                        help_text="Project this link belongs to",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="response_links",
                        to="projects.project",
                    ),
                ),
            ],
            options={
                "verbose_name": "Response Link",
                "verbose_name_plural": "Response Links",
                "db_table": "response_links",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["token"], name="response_li_token_3108e2_idx"),
                    models.Index(
                        fields=["project", "is_active"],
                        name="response_li_project_6a26d2_idx",
                    ),
                    models.Index(
                        fields=["created_by", "is_active"],
                        name="response_li_created_42d97a_idx",
                    ),
                    models.Index(
                        fields=["expires_at"], name="response_li_expires_3bbdb4_idx"
                    ),
                    models.Index(
                        fields=["-created_at"], name="response_li_created_fddc4a_idx"
                    ),
                ],
                "constraints": [
                    models.CheckConstraint(
                        condition=models.Q(("max_responses__gte", 0)),
                        name="max_responses_non_negative",
                    ),
                    models.CheckConstraint(
                        condition=models.Q(("response_count__gte", 0)),
                        name="response_count_non_negative",
                    ),
                ],
            },
        ),
    ]
